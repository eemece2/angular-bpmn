{"version":3,"sources":["bpmn.directive.js","event.directive.js","end-event.directive.js","exclusive-gateway.directive.js","gateway.directive.js","lane.directive.js","participant.directive.js","parallel-gateway.directive.js","process.directive.js","sequence-flow.directive.js","receive-task.directive.js","svg-defs.directive.js","rounder.service.js","svg-symbols.directive.js","script-task.directive.js","task.directive.js","send-task.directive.js","service-task.directive.js","start-event.directive.js","user-task.directive.js"],"names":["module","angular","e","run","$templateCache","put","directive","restrict","scope","definitions","w","h","transclude","replace","templateUrl","templateNamespace","controllerAs","bindToController","controller","$scope","event","this","bounds","di","Bounds","$","type","BPMNLabel","label","x","y","gateway","lane","height","participant","process","task","symbol","yLabel","witdh","factory","roundPathCorners","pathString","radius","useFractionalRadius","moveTowardsLength","movingPoint","targetPoint","amount","width","distance","Math","sqrt","moveTowardsFractional","min","fraction","adjustCommand","cmd","newPoint","length","pointForCommand","parseFloat","pathParts","split","reduce","parts","part","match","push","commands","resultCommands","startPoint","virtualCloseLine","cmdIndex","prevCmd","curCmd","nextCmd","curveStart","curveEnd","prevPoint","curPoint","nextPoint","origPoint","startControl","endControl","curveCmd","newStartPoint","str","c","join","RounderService","sf","wpoints","waypoint","wps","i","prueba"],"mappings":"CAAA,SAAUA,GACV,IACEA,EAASC,QAAQD,OAAO,kBACxB,MAAOE,GACPF,EAASC,QAAQD,OAAO,qBAE1BA,EAAOG,KAAK,iBAAkB,SAASC,GACrCA,EAAeC,IAAI,yBACjB,ybARJJ,QAAQD,OAAO,QAAS,mBACxBM,UAAU,OAAQ,WACd,OACIC,SAAU,IACVC,OACIC,YAAe,IACfC,EAAG,IACHC,EAAG,KAEPC,YAAY,EACZC,SAAS,EACTC,YAAa,yBACbC,kBAAmB,MACnBC,aAAc,OACdC,kBAAkB,EAClBC,YAAA,SAAY,SAASC,SCf7B,SAAUnB,GACV,IACEA,EAASC,QAAQD,OAAO,kBACxB,MAAOE,GACPF,EAASC,QAAQD,OAAO,qBAE1BA,EAAOG,KAAK,iBAAkB,SAASC,GACrCA,EAAeC,IAAI,0BACjB,sbCRJJ,QAAQD,OAAO,QACfM,UAAU,WAAY,WAClB,OACIC,SAAU,IACVC,OACIY,MAAO,KAEXP,SAAS,EACTC,YAAa,0BACbC,kBAAmB,MACnBC,aAAc,QACdC,kBAAkB,EAClBC,WAAY,WACRG,KAAKC,OAASD,KAAKD,MAAMG,GAAGC,OAAO,GAAGC,EACtCJ,KAAKK,KAAO,MAETL,KAAKD,MAAMG,GAAGI,YACbN,KAAKO,MAAQP,KAAKD,MAAMG,GAAGI,UAAU,GAAGH,OAAO,GAAGC,EAClDJ,KAAKO,MAAMC,GAAKR,KAAKC,OAAOO,EAC5BR,KAAKO,MAAME,GAAKT,KAAKC,OAAOQ,OCnB5C7B,QAAQD,OAAO,QACfM,UAAU,mBAAoB,WAC1B,OACIC,SAAU,IACVC,OACIuB,QAAS,KAEblB,SAAS,EACTC,YAAa,4BACbC,kBAAmB,MACnBC,aAAc,UACdC,kBAAkB,EAClBC,WAAY,WACRG,KAAKC,OAASD,KAAKU,QAAQR,GAAGC,OAAO,GAAGC,EACxCJ,KAAKK,KAAO,YAETL,KAAKU,QAAQR,GAAGI,YACfN,KAAKO,MAAQP,KAAKU,QAAQR,GAAGI,UAAU,GAAGH,OAAO,GAAGC,EACpDJ,KAAKO,MAAMC,GAAKR,KAAKC,OAAOO,EAC5BR,KAAKO,MAAME,GAAKT,KAAKC,OAAOQ,OCnB5C,SAAU9B,GACV,IACEA,EAASC,QAAQD,OAAO,kBACxB,MAAOE,GACPF,EAASC,QAAQD,OAAO,qBAE1BA,EAAOG,KAAK,iBAAkB,SAASC,GACrCA,EAAeC,IAAI,4BACjB,0pBCRJJ,QAAQD,OAAO,QACfM,UAAU,OAAQ,WACd,OACIC,SAAU,IACVC,OACIwB,KAAM,KAEVnB,SAAS,EACTC,YAAa,yBACbC,kBAAmB,MACnBC,aAAc,OACdC,kBAAkB,EAClBC,WAAY,WACRG,KAAKC,OAASD,KAAKW,KAAKT,GAAGC,OAAO,GAAGC,EAErCJ,KAAKO,OACDC,GAAKR,KAAKC,OAAOW,OAAS,EAC1BH,EAAG,QAjBnB,SAAU9B,GACV,IACEA,EAASC,QAAQD,OAAO,kBACxB,MAAOE,GACPF,EAASC,QAAQD,OAAO,qBAE1BA,EAAOG,KAAK,iBAAkB,SAASC,GACrCA,EAAeC,IAAI,yBACjB,kXCRJ,SAAUL,GACV,IACEA,EAASC,QAAQD,OAAO,kBACxB,MAAOE,GACPF,EAASC,QAAQD,OAAO,qBAE1BA,EAAOG,KAAK,iBAAkB,SAASC,GACrCA,EAAeC,IAAI,gCACjB,wcCRJJ,QAAQD,OAAO,QACfM,UAAU,kBAAmB,WACzB,OACIC,SAAU,IACVC,OACIuB,QAAS,KAEblB,SAAS,EACTC,YAAa,4BACbC,kBAAmB,MACnBC,aAAc,UACdC,kBAAkB,EAClBC,WAAY,WACRG,KAAKC,OAASD,KAAKU,QAAQR,GAAGC,OAAO,GAAGC,EACxCJ,KAAKK,KAAO,WAETL,KAAKU,QAAQR,GAAGI,YACfN,KAAKO,MAAQP,KAAKU,QAAQR,GAAGI,UAAU,GAAGH,OAAO,GAAGC,EACpDJ,KAAKO,MAAMC,GAAKR,KAAKC,OAAOO,EAC5BR,KAAKO,MAAME,GAAKT,KAAKC,OAAOQ,OCnB5C,SAAU9B,GACV,IACEA,EAASC,QAAQD,OAAO,kBACxB,MAAOE,GACPF,EAASC,QAAQD,OAAO,qBAE1BA,EAAOG,KAAK,iBAAkB,SAASC,GACrCA,EAAeC,IAAI,4BACjB,6nCFRJJ,QAAQD,OAAO,QACfM,UAAU,cAAe,WACrB,OACIC,SAAU,IACVC,OACI0B,YAAa,KAEjBrB,SAAS,EACTC,YAAa,gCACbC,kBAAmB,MACnBC,aAAc,cACdC,kBAAkB,EAClBC,WAAY,WACRG,KAAKC,OAASD,KAAKa,YAAYX,GAAGC,OAAO,GAAGC,EAE5CJ,KAAKO,OACDC,GAAOR,KAAKC,OAAOW,OAAS,EAC5BH,EAAK,QEjBrB7B,QAAQD,OAAO,QACfM,UAAU,UAAW,WACjB,OACIC,SAAU,IACVC,OACI2B,QAAW,IACXzB,EAAG,IACHC,EAAG,KAEPE,SAAS,EACTC,YAAa,4BACbC,kBAAmB,MACnBC,aAAc,UACdC,kBAAkB,EAClBC,YAAA,SAAY,SAASC,SCd7B,SAAUnB,GACV,IACEA,EAASC,QAAQD,OAAO,kBACxB,MAAOE,GACPF,EAASC,QAAQD,OAAO,qBAE1BA,EAAOG,KAAK,iBAAkB,SAASC,GACrCA,EAAeC,IAAI,kCACjB,yOCRJJ,QAAQD,OAAO,QACfM,UAAU,cAAe,WACrB,OACIC,SAAU,IACVC,OACI4B,KAAM,KAEVvB,SAAS,EACTC,YAAa,yBACbC,kBAAmB,MACnBC,aAAc,OACdC,kBAAkB,EAClBC,WAAY,WAIR,GAHAG,KAAKC,OAASD,KAAKe,KAAKb,GAAGC,OAAO,GAAGC,EACrCJ,KAAKK,KAAO,UACZL,KAAKgB,OAAS,IAAMhB,KAAKK,KAAO,QAC7BL,KAAKe,KAAKb,GAAGI,UACZN,KAAKO,MAAQP,KAAKe,KAAKb,GAAGI,UAAU,GAAGH,OAAO,GAAGC,EACjDJ,KAAKO,MAAMC,GAAKR,KAAKC,OAAOO,EAC5BR,KAAKO,MAAME,GAAKT,KAAKC,OAAOQ,MACzB,CAEH,GAAIQ,GAASjB,KAAKC,OAAOW,OAAS,CAClCZ,MAAKO,OAAUC,EAAG,GAAIC,EAAGQ,EAAQC,MAAO,GAAIN,OAAQ,SCvBpE,SAAUjC,GACV,IACEA,EAASC,QAAQD,OAAO,kBACxB,MAAOE,GACPF,EAASC,QAAQD,OAAO,qBAE1BA,EAAOG,KAAK,iBAAkB,SAASC,GACrCA,EAAeC,IAAI,6BACjB,0jBCRJJ,QAAQD,OAAO,QACfwC,QAAQ,iBAAkB,WAqCtB,QAASC,GAAiBC,EAAYC,EAAQC,GAC5C,QAASC,GAAkBC,EAAaC,EAAaC,GACnD,GAAIC,GAASF,EAAYlB,EAAIiB,EAAYjB,EACrCI,EAAUc,EAAYjB,EAAIgB,EAAYhB,EAEtCoB,EAAWC,KAAKC,KAAKH,EAAMA,EAAQhB,EAAOA,EAE9C,OAAOoB,GAAsBP,EAAaC,EAAaI,KAAKG,IAAI,EAAGN,EAASE,IAE9E,QAASG,GAAsBP,EAAaC,EAAaQ,GACvD,OACE1B,EAAGiB,EAAYjB,GAAKkB,EAAYlB,EAAIiB,EAAYjB,GAAG0B,EACnDzB,EAAGgB,EAAYhB,GAAKiB,EAAYjB,EAAIgB,EAAYhB,GAAGyB,GAKvD,QAASC,GAAcC,EAAKC,GACtBD,EAAIE,OAAS,IACfF,EAAIA,EAAIE,OAAS,GAAKD,EAAS7B,EAC/B4B,EAAIA,EAAIE,OAAS,GAAKD,EAAS5B,GAKnC,QAAS8B,GAAgBH,GACvB,OACE5B,EAAGgC,WAAWJ,EAAIA,EAAIE,OAAS,IAC/B7B,EAAG+B,WAAWJ,EAAIA,EAAIE,OAAS,KAKnC,GAAIG,GAAYpB,EACbqB,MAAM,SACNC,OAAO,SAASC,EAAOC,GACtB,GAAIC,GAAQD,EAAKC,MAAM,iBAQvB,OAPIA,IACFF,EAAMG,KAAKD,EAAM,IACjBF,EAAMG,KAAKD,EAAM,KAEjBF,EAAMG,KAAKF,GAGND,OAIPI,EAAWP,EAAUE,OAAO,SAASK,EAAUH,GAOjD,MANIL,YAAWK,IAASA,GAAQG,EAASV,OACvCU,EAASA,EAASV,OAAS,GAAGS,KAAKF,GAEnCG,EAASD,MAAMF,IAGVG,OAILC,IAEJ,IAAID,EAASV,OAAS,EAAG,CACvB,GAAIY,GAAaX,EAAgBS,EAAS,IAGtCG,EAAmB,IACiB,MAApCH,EAASA,EAASV,OAAS,GAAG,IAAaU,EAAS,GAAGV,OAAS,IAClEa,GAAoB,IAAKD,EAAW1C,EAAG0C,EAAWzC,GAClDuC,EAASA,EAASV,OAAS,GAAKa,GAIlCF,EAAeF,KAAKC,EAAS,GAE7B,KAAK,GAAII,GAAS,EAAGA,EAAWJ,EAASV,OAAQc,IAAY,CAC3D,GAAIC,GAAUJ,EAAeA,EAAeX,OAAS,GAEjDgB,EAASN,EAASI,GAGlBG,EAAWD,GAAUH,EAAoBH,EAAS,GAAKA,EAASI,EAAW,EAG/E,IAAIG,GAAWF,GAAYA,EAAQf,OAAS,GAAmB,KAAbgB,EAAO,IAAaC,EAAQjB,OAAS,GAAmB,KAAdiB,EAAQ,GAAW,CAE7G,GAKIC,GAAYC,EALZC,EAAYnB,EAAgBc,GAC5BM,EAAWpB,EAAgBe,GAC3BM,EAAYrB,EAAgBgB,EAK5BhC,IACFiC,EAAaxB,EAAsB2B,EAAUN,EAAQQ,WAAaH,EAAWpC,GAC7EmC,EAAWzB,EAAsB2B,EAAUJ,EAAQM,WAAaD,EAAWtC,KAE3EkC,EAAahC,EAAkBmC,EAAUD,EAAWpC,GACpDmC,EAAWjC,EAAkBmC,EAAUC,EAAWtC,IAIpDa,EAAcmB,EAAQE,GACtBF,EAAOO,UAAYF,EACnBV,EAAeF,KAAKO,EAIpB,IAAIQ,GAAe9B,EAAsBwB,EAAYG,EAAU,IAC3DI,EAAa/B,EAAsB2B,EAAUF,EAAU,IAGvDO,GAAY,IAAKF,EAAatD,EAAGsD,EAAarD,EAAGsD,EAAWvD,EAAGuD,EAAWtD,EAAGgD,EAASjD,EAAGiD,EAAShD,EAEtGuD,GAASH,UAAYF,EACrBV,EAAeF,KAAKiB,OAGpBf,GAAeF,KAAKO,GAKxB,GAAIH,EAAkB,CACpB,GAAIc,GAAgB1B,EAAgBU,EAAeA,EAAeX,OAAO,GACzEW,GAAeF,MAAM,MACrBZ,EAAcc,EAAe,GAAIgB,QAGnChB,GAAiBD,CAGnB,OAAOC,GAAeN,OAAO,SAASuB,EAAKC,GAAI,MAAOD,GAAMC,EAAEC,KAAK,KAAO,KAAQ,IAtKpF,MAAOhD,KCHX,SAAUzC,GACV,IACEA,EAASC,QAAQD,OAAO,kBACxB,MAAOE,GACPF,EAASC,QAAQD,OAAO,qBAE1BA,EAAOG,KAAK,iBAAkB,SAASC,GACrCA,EAAeC,IAAI,gCACjB,utECRJJ,QAAQD,OAAO,QACfM,UAAU,aAAc,WACpB,OACIC,SAAU,IACVC,OACI4B,KAAM,KAEVvB,SAAS,EACTC,YAAa,yBACbC,kBAAmB,MACnBC,aAAc,OACdC,kBAAkB,EAClBC,WAAY,WAIR,GAHAG,KAAKC,OAASD,KAAKe,KAAKb,GAAGC,OAAO,GAAGC,EACrCJ,KAAKK,KAAO,SACZL,KAAKgB,OAAS,IAAMhB,KAAKK,KAAO,QAC7BL,KAAKe,KAAKb,GAAGI,UACZN,KAAKO,MAAQP,KAAKe,KAAKb,GAAGI,UAAU,GAAGH,OAAO,GAAGC,EACjDJ,KAAKO,MAAMC,GAAKR,KAAKC,OAAOO,EAC5BR,KAAKO,MAAME,GAAKT,KAAKC,OAAOQ,MACzB,CAEH,GAAIQ,GAASjB,KAAKC,OAAOW,OAAS,CAClCZ,MAAKO,OAAUC,EAAG,GAAIC,EAAGQ,EAAQC,MAAO,GAAIN,OAAQ,SCvBpE,SAAUjC,GACV,IACEA,EAASC,QAAQD,OAAO,kBACxB,MAAOE,GACPF,EAASC,QAAQD,OAAO,qBAE1BA,EAAOG,KAAK,iBAAkB,SAASC,GACrCA,EAAeC,IAAI,yBACjB,6lBCRJJ,QAAQD,OAAO,QACfM,UAAU,WAAY,WAClB,OACIC,SAAU,IACVC,OACI4B,KAAM,KAEVvB,SAAS,EACTC,YAAa,yBACbC,kBAAmB,MACnBC,aAAc,OACdC,kBAAkB,EAClBC,WAAY,WAIR,GAHAG,KAAKC,OAASD,KAAKe,KAAKb,GAAGC,OAAO,GAAGC,EACrCJ,KAAKK,KAAO,OACZL,KAAKgB,OAAS,IAAMhB,KAAKK,KAAO,QAC7BL,KAAKe,KAAKb,GAAGI,UACZN,KAAKO,MAAQP,KAAKe,KAAKb,GAAGI,UAAU,GAAGH,OAAO,GAAGC,EACjDJ,KAAKO,MAAMC,GAAKR,KAAKC,OAAOO,EAC5BR,KAAKO,MAAME,GAAKT,KAAKC,OAAOQ,MACzB,CAEH,GAAIQ,GAASjB,KAAKC,OAAOW,OAAS,CAClCZ,MAAKO,OAAUC,EAAG,GAAIC,EAAGQ,EAAQC,MAAO,GAAIN,OAAQ,SPvBpEhC,QAAQD,OAAO,QACfM,UAAU,gBAAA,iBAAgB,SAASoF,GAC/B,OACInF,SAAU,IACVC,OACImF,GAAI,KAER9E,SAAS,EACTC,YAAa,kCACbC,kBAAmB,MACnBC,aAAc,KACdC,kBAAkB,EAClBC,YAAA,SAAY,SAASC,GAEdE,KAAKsE,GAAGpE,GAAGI,YACVN,KAAKO,MAAQP,KAAKsE,GAAGpE,GAAGI,UAAU,GAAGH,OAAO,GAAGC,EAGnD,IAAImE,GAAUvE,KAAKsE,GAAGpE,GAAGsE,QACzBxE,MAAKyE,IAAM,IAAMF,EAAQ,GAAGnE,EAAEI,EAAI,IAAM+D,EAAQ,GAAGnE,EAAEK,CACrD,KAAI,GAAIiE,GAAI,EAAGA,EAAIH,EAAQjC,OAAQoC,IAC/B1E,KAAKyE,KAAQ,KAAOF,EAAQG,GAAGtE,EAAEI,EAAI,IAAM+D,EAAQG,GAAGtE,EAAEK,CAE5DT,MAAKyE,IAAMJ,EAAerE,KAAKyE,IAAK,SQvBhD7F,QAAQD,OAAO,QACfM,UAAU,cAAe,WACrB,OACIC,SAAU,IACVC,OACI4B,KAAM,KAEVvB,SAAS,EACTC,YAAa,yBACbC,kBAAmB,MACnBC,aAAc,OACdC,kBAAkB,EAClBC,WAAY,WAIR,GAHAG,KAAKC,OAASD,KAAKe,KAAKb,GAAGC,OAAO,GAAGC,EACrCJ,KAAKK,KAAO,UACZL,KAAKgB,OAAS,IAAMhB,KAAKK,KAAO,QAC7BL,KAAKe,KAAKb,GAAGI,UACZN,KAAKO,MAAQP,KAAKe,KAAKb,GAAGI,UAAU,GAAGH,OAAO,GAAGC,EACjDJ,KAAKO,MAAMC,GAAKR,KAAKC,OAAOO,EAC5BR,KAAKO,MAAME,GAAKT,KAAKC,OAAOQ,MACzB,CAEH,GAAIQ,GAASjB,KAAKC,OAAOW,OAAS,CAClCZ,MAAKO,OAAUC,EAAG,GAAIC,EAAGQ,EAAQC,MAAO,GAAIN,OAAQ,SCvBpEhC,QAAQD,OAAO,QACfM,UAAU,aAAc,WACpB,OACIC,SAAU,IACVC,OACIY,MAAO,KAEXP,SAAS,EACTC,YAAa,0BACbC,kBAAmB,MACnBC,aAAc,QACdC,kBAAkB,EAClBC,WAAY,WACRG,KAAKC,OAASD,KAAKD,MAAMG,GAAGC,OAAO,GAAGC,EACtCJ,KAAKK,KAAO,QAETL,KAAKD,MAAMG,GAAGI,YACbN,KAAKO,MAAQP,KAAKD,MAAMG,GAAGI,UAAU,GAAGH,OAAO,GAAGC,EAClDJ,KAAKO,MAAMC,GAAKR,KAAKC,OAAOO,EAC5BR,KAAKO,MAAME,GAAKT,KAAKC,OAAOQ,OPnB5C7B,QAAQD,OAAO,QACfM,UAAU,UAAW,WACjB,OACIC,SAAU,IACVC,SAEAK,SAAS,EACTC,YAAa,6BACbC,kBAAmB,MACnBC,aAAc,OACdC,kBAAkB,EAClBC,WAAY,gBEXpBjB,QAAQD,OAAO,QACfM,UAAU,aAAc,WACpB,OACIC,SAAU,IACVC,SAEAK,SAAS,EACTC,YAAa,gCACbC,kBAAmB,MACnBC,aAAc,UACdC,kBAAkB,EAClBC,WAAY,gBEXpBjB,QAAQD,OAAO,QACfM,UAAU,OAAQ,WACd,OACIC,SAAU,IACVC,OACI4B,KAAM,KAEVvB,SAAS,EACTC,YAAa,yBACbC,kBAAmB,MACnBC,aAAc,OACdC,kBAAkB,EAClBC,WAAY,WAKR,GAJAG,KAAK2E,OAAS,EACd3E,KAAKC,OAASD,KAAKe,KAAKb,GAAGC,OAAO,GAAGC,EACrCJ,KAAKK,KAAO,GACZL,KAAKgB,OAAS,GACXhB,KAAKe,KAAKb,GAAGI,UACZN,KAAKO,MAAQP,KAAKe,KAAKb,GAAGI,UAAU,GAAGH,OAAO,GAAGC,MAC9C,CAEH,GAAIa,GAASjB,KAAKC,OAAOW,OAAS,CAClCZ,MAAKO,OAAUC,EAAG,GAAIC,EAAGQ,EAAQC,MAAO,GAAIN,OAAQ,SItBpEhC,QAAQD,OAAO,QACfM,UAAU,WAAY,WAClB,OACIC,SAAU,IACVC,OACI4B,KAAM,KAEVvB,SAAS,EACTC,YAAa,yBACbC,kBAAmB,MACnBC,aAAc,OACdC,kBAAkB,EAClBC,WAAY,WAIR,GAHAG,KAAKC,OAASD,KAAKe,KAAKb,GAAGC,OAAO,GAAGC,EACrCJ,KAAKK,KAAO,OACZL,KAAKgB,OAAS,IAAMhB,KAAKK,KAAO,QAC7BL,KAAKe,KAAKb,GAAGI,UACZN,KAAKO,MAAQP,KAAKe,KAAKb,GAAGI,UAAU,GAAGH,OAAO,GAAGC,EACjDJ,KAAKO,MAAMC,GAAKR,KAAKC,OAAOO,EAC5BR,KAAKO,MAAME,GAAKT,KAAKC,OAAOQ,MACzB,CAEH,GAAIQ,GAASjB,KAAKC,OAAOW,OAAS,CAClCZ,MAAKO,OAAUC,EAAG,GAAIC,EAAGQ,EAAQC,MAAO,GAAIN,OAAQ","file":"angular-bpmn.min.js","sourcesContent":["angular.module('bpmn', ['bpmn.templates']).\ndirective('bpmn', function() {\n    return {\n        restrict: 'E',\n        scope: {\n            \"definitions\": \"=\",\n            w: \"=\",\n            h: \"=\"\n        },\n        transclude: true,\n        replace: true,\n        templateUrl: 'js/bpmn.directive.html',\n        templateNamespace: 'svg',\n        controllerAs: 'bpmn',\n        bindToController: true,\n        controller: function($scope) {\n        }\n    };\n});\n\n","(function(module) {\ntry {\n  module = angular.module('bpmn.templates');\n} catch (e) {\n  module = angular.module('bpmn.templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('js/event.directive.html',\n    '<g ng:attr:transform=\"translate({{event.bounds.x}},{{event.bounds.y}})\" >\\n' +\n    '    <circle x=\"0\" y=\"0\"\\n' +\n    '        ng:attr:cx=\"{{event.bounds.width / 2}}\" ng:attr:cy=\"{{event.bounds.height / 2}}\"\\n' +\n    '        ng:attr:r=\"{{event.bounds.width / 2}}\"\\n' +\n    '        class=\"event event-{{event.type}}\"\\n' +\n    '    ></circle>\\n' +\n    '    <text ng:attr:transform=\"translate({{event.label.x}},{{event.label.y}}) translate(0,15)\">{{event.event.$.name}}</text>\\n' +\n    '</g>\\n' +\n    '');\n}]);\n})();\n","angular.module('bpmn').\ndirective('endEvent', function() {\n    return {\n        restrict: 'E',\n        scope: {\n            event: \"=\"\n        },\n        replace: true,\n        templateUrl: 'js/event.directive.html',\n        templateNamespace: 'svg',\n        controllerAs: 'event',\n        bindToController: true,\n        controller: function() {\n            this.bounds = this.event.di.Bounds[0].$;\n            this.type = 'end';\n            // Label\n            if(this.event.di.BPMNLabel) {\n                this.label = this.event.di.BPMNLabel[0].Bounds[0].$;\n                this.label.x -= this.bounds.x;\n                this.label.y -= this.bounds.y;\n            }\n        }\n    };\n});\n","angular.module('bpmn').\ndirective('exclusiveGateway', function() {\n    return {\n        restrict: 'E',\n        scope: {\n            gateway: \"=\"\n        },\n        replace: true,\n        templateUrl: 'js/gateway.directive.html',\n        templateNamespace: 'svg',\n        controllerAs: 'gateway',\n        bindToController: true,\n        controller: function() {\n            this.bounds = this.gateway.di.Bounds[0].$;\n            this.type = 'exclusive';\n            // Label\n            if(this.gateway.di.BPMNLabel) {\n                this.label = this.gateway.di.BPMNLabel[0].Bounds[0].$;\n                this.label.x -= this.bounds.x;\n                this.label.y -= this.bounds.y;\n            }\n        }\n    };\n});\n","(function(module) {\ntry {\n  module = angular.module('bpmn.templates');\n} catch (e) {\n  module = angular.module('bpmn.templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('js/gateway.directive.html',\n    '<g ng:attr:transform=\"translate({{gateway.bounds.x}},{{gateway.bounds.y}})\" >\\n' +\n    '    <polygon x=\"0\" y=\"0\"\\n' +\n    '        ng:attr:points=\"\\n' +\n    '           {{gateway.bounds.width / 2}},0\\n' +\n    '           {{gateway.bounds.width}},{{gateway.bounds.height / 2}}\\n' +\n    '           {{gateway.bounds.width / 2}},{{gateway.bounds.height}}\\n' +\n    '           0,{{gateway.bounds.height / 2}}\\n' +\n    '           \"\\n' +\n    '        class=\"gateway\"\\n' +\n    '        ng-class=\"gateway.type\"\\n' +\n    '    ></polygon>\\n' +\n    '    <use ng:attr:xlink:href=\"{{\\'#simbol-\\'+gateway.type}}\" x=\"10\" y=\"10\"/>\\n' +\n    '    <text ng:attr:transform=\"translate({{gateway.label.x}},{{gateway.label.y}}) translate(0,15)\">{{gateway.gateway.$.name}}</text>\\n' +\n    '</g>\\n' +\n    '');\n}]);\n})();\n","(function(module) {\ntry {\n  module = angular.module('bpmn.templates');\n} catch (e) {\n  module = angular.module('bpmn.templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('js/lane.directive.html',\n    '<g ng:attr:transform=\"translate({{lane.bounds.x}},{{lane.bounds.y}})\" >\\n' +\n    '    <rect x=\"0\" y=\"0\"\\n' +\n    '        ng:attr:width=\"{{lane.bounds.width}}\" ng:attr:height=\"{{lane.bounds.height}}\"\\n' +\n    '        class=\"lane\"\\n' +\n    '    ></rect>\\n' +\n    '    <text class=\"lane-label\" ng:attr:transform=\"rotate(-90) translate({{lane.label.x}},{{lane.label.y}})\">{{lane.lane.$.name}}</text>\\n' +\n    '</g>\\n' +\n    '');\n}]);\n})();\n","angular.module('bpmn').\ndirective('participant', function() {\n    return {\n        restrict: 'E',\n        scope: {\n            participant: \"=\"\n        },\n        replace: true,\n        templateUrl: 'js/participant.directive.html',\n        templateNamespace: 'svg',\n        controllerAs: 'participant',\n        bindToController: true,\n        controller: function() {\n            this.bounds = this.participant.di.Bounds[0].$;\n            // Label\n            this.label = {\n                'x': - this.bounds.height / 2,\n                'y': 20\n            };\n\n            // TODO: isHorizontal: false\n        }\n    };\n});\n","angular.module('bpmn').\ndirective('parallelGateway', function() {\n    return {\n        restrict: 'E',\n        scope: {\n            gateway: \"=\"\n        },\n        replace: true,\n        templateUrl: 'js/gateway.directive.html',\n        templateNamespace: 'svg',\n        controllerAs: 'gateway',\n        bindToController: true,\n        controller: function() {\n            this.bounds = this.gateway.di.Bounds[0].$;\n            this.type = 'parallel';\n            // Label\n            if(this.gateway.di.BPMNLabel) {\n                this.label = this.gateway.di.BPMNLabel[0].Bounds[0].$;\n                this.label.x -= this.bounds.x;\n                this.label.y -= this.bounds.y;\n            }\n        }\n    };\n});\n","angular.module('bpmn').\ndirective('process', function() {\n    return {\n        restrict: 'E',\n        scope: {\n            \"process\": \"=\",\n            w: \"=\",\n            h: \"=\"\n        },\n        replace: true,\n        templateUrl: 'js/process.directive.html',\n        templateNamespace: 'svg',\n        controllerAs: 'process',\n        bindToController: true,\n        controller: function($scope) {\n        }\n    };\n});\n\n","angular.module('bpmn').\ndirective('sequenceFlow', function(RounderService) {\n    return {\n        restrict: 'E',\n        scope: {\n            sf: \"=\"\n        },\n        replace: true,\n        templateUrl: 'js/sequence-flow.directive.html',\n        templateNamespace: 'svg',\n        controllerAs: 'sf',\n        bindToController: true,\n        controller: function($scope) {\n            // Label\n            if(this.sf.di.BPMNLabel) {\n                this.label = this.sf.di.BPMNLabel[0].Bounds[0].$;\n            }\n            // Waypoints\n            var wpoints = this.sf.di.waypoint;\n            this.wps = 'M' + wpoints[0].$.x + ',' + wpoints[0].$.y;\n            for(var i = 1; i < wpoints.length; i++) {\n                this.wps  += \" L\" + wpoints[i].$.x + \",\" + wpoints[i].$.y;\n            }\n            this.wps = RounderService(this.wps, 8);\n        }\n    };\n});\n","angular.module('bpmn').\ndirective('receiveTask', function() {\n    return {\n        restrict: 'E',\n        scope: {\n            task: \"=\"\n        },\n        replace: true,\n        templateUrl: 'js/task.directive.html',\n        templateNamespace: 'svg',\n        controllerAs: 'task',\n        bindToController: true,\n        controller: function() {\n            this.bounds = this.task.di.Bounds[0].$;\n            this.type = 'receive';\n            this.symbol = '#' + this.type + '-task';\n            if(this.task.di.BPMNLabel) {\n                this.label = this.task.di.BPMNLabel[0].Bounds[0].$;\n                this.label.x -= this.bounds.x;\n                this.label.y -= this.bounds.y;\n            } else {\n                // TODO: multiline labels (long texts: divide label)\n                var yLabel = this.bounds.height / 2;\n                this.label = { x: 10, y: yLabel, witdh: 80, height: 20 };\n            }\n        }\n    };\n});\n","angular.module('bpmn').\ndirective('svgDefs', function() {\n    return {\n        restrict: 'E',\n        scope: {\n        },\n        replace: true,\n        templateUrl: 'js/svg-defs.directive.html',\n        templateNamespace: 'svg',\n        controllerAs: 'defs',\n        bindToController: true,\n        controller: function() {\n        }\n    };\n});\n\n","angular.module('bpmn').\nfactory('RounderService', function() {\n\n    return roundPathCorners;\n\n    /*****************************************************************************\n    *                                                                            *\n    *  SVG Path Rounding Function                                                *\n    *  Copyright (C) 2014 Yona Appletree                                         *\n    *                                                                            *\n    *  Licensed under the Apache License, Version 2.0 (the \"License\");           *\n    *  you may not use this file except in compliance with the License.          *\n    *  You may obtain a copy of the License at                                   *\n    *                                                                            *\n    *      http://www.apache.org/licenses/LICENSE-2.0                            *\n    *                                                                            *\n    *  Unless required by applicable law or agreed to in writing, software       *\n    *  distributed under the License is distributed on an \"AS IS\" BASIS,         *\n    *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *\n    *  See the License for the specific language governing permissions and       *\n    *  limitations under the License.                                            *\n    *                                                                            *\n    *****************************************************************************/\n\n    /**\n     * SVG Path rounding function. Takes an input path string and outputs a path\n     * string where all line-line corners have been rounded. Only supports absolute\n     * commands at the moment.\n     *\n     * @param pathString The SVG input path\n     * @param radius The amount to round the corners, either a value in the SVG\n     *               coordinate space, or, if useFractionalRadius is true, a value\n     *               from 0 to 1.\n     * @param useFractionalRadius If true, the curve radius is expressed as a\n     *               fraction of the distance between the point being curved and\n     *               the previous and next points.\n     * @returns A new SVG path string with the rounding\n     */\n    function roundPathCorners(pathString, radius, useFractionalRadius) {\n      function moveTowardsLength(movingPoint, targetPoint, amount) {\n        var width = (targetPoint.x - movingPoint.x);\n        var height = (targetPoint.y - movingPoint.y);\n\n        var distance = Math.sqrt(width*width + height*height);\n\n        return moveTowardsFractional(movingPoint, targetPoint, Math.min(1, amount / distance));\n      }\n      function moveTowardsFractional(movingPoint, targetPoint, fraction) {\n        return {\n          x: movingPoint.x + (targetPoint.x - movingPoint.x)*fraction,\n          y: movingPoint.y + (targetPoint.y - movingPoint.y)*fraction\n        };\n      }\n\n      // Adjusts the ending position of a command\n      function adjustCommand(cmd, newPoint) {\n        if (cmd.length > 2) {\n          cmd[cmd.length - 2] = newPoint.x;\n          cmd[cmd.length - 1] = newPoint.y;\n        }\n      }\n\n      // Gives an {x, y} object for a command's ending position\n      function pointForCommand(cmd) {\n        return {\n          x: parseFloat(cmd[cmd.length - 2]),\n          y: parseFloat(cmd[cmd.length - 1]),\n        };\n      }\n\n      // Split apart the path, handing concatonated letters and numbers\n      var pathParts = pathString\n        .split(/[,\\s]/)\n        .reduce(function(parts, part){\n          var match = part.match(\"([a-zA-Z])(.+)\");\n          if (match) {\n            parts.push(match[1]);\n            parts.push(match[2]);\n          } else {\n            parts.push(part);\n          }\n\n          return parts;\n        }, []);\n\n      // Group the commands with their arguments for easier handling\n      var commands = pathParts.reduce(function(commands, part) {\n        if (parseFloat(part) == part && commands.length) {\n          commands[commands.length - 1].push(part);\n        } else {\n          commands.push([part]);\n        }\n\n        return commands;\n      }, []);\n\n      // The resulting commands, also grouped\n      var resultCommands = [];\n\n      if (commands.length > 1) {\n        var startPoint = pointForCommand(commands[0]);\n\n        // Handle the close path case with a \"virtual\" closing line\n        var virtualCloseLine = null;\n        if (commands[commands.length - 1][0] == \"Z\" && commands[0].length > 2) {\n          virtualCloseLine = [\"L\", startPoint.x, startPoint.y];\n          commands[commands.length - 1] = virtualCloseLine;\n        }\n\n        // We always use the first command (but it may be mutated)\n        resultCommands.push(commands[0]);\n\n        for (var cmdIndex=1; cmdIndex < commands.length; cmdIndex++) {\n          var prevCmd = resultCommands[resultCommands.length - 1];\n\n          var curCmd = commands[cmdIndex];\n\n          // Handle closing case\n          var nextCmd = (curCmd == virtualCloseLine) ? commands[1] : commands[cmdIndex + 1];\n\n          // Nasty logic to decide if this path is a candidite.\n          if (nextCmd && prevCmd && (prevCmd.length > 2) && curCmd[0] == \"L\" && nextCmd.length > 2 && nextCmd[0] == \"L\") {\n            // Calc the points we're dealing with\n            var prevPoint = pointForCommand(prevCmd);\n            var curPoint = pointForCommand(curCmd);\n            var nextPoint = pointForCommand(nextCmd);\n\n            // The start and end of the cuve are just our point moved towards the previous and next points, respectivly\n            var curveStart, curveEnd;\n\n            if (useFractionalRadius) {\n              curveStart = moveTowardsFractional(curPoint, prevCmd.origPoint || prevPoint, radius);\n              curveEnd = moveTowardsFractional(curPoint, nextCmd.origPoint || nextPoint, radius);\n            } else {\n              curveStart = moveTowardsLength(curPoint, prevPoint, radius);\n              curveEnd = moveTowardsLength(curPoint, nextPoint, radius);\n            }\n\n            // Adjust the current command and add it\n            adjustCommand(curCmd, curveStart);\n            curCmd.origPoint = curPoint;\n            resultCommands.push(curCmd);\n\n            // The curve control points are halfway between the start/end of the curve and\n            // the original point\n            var startControl = moveTowardsFractional(curveStart, curPoint, 0.5);\n            var endControl = moveTowardsFractional(curPoint, curveEnd, 0.5);\n\n            // Create the curve\n            var curveCmd = [\"C\", startControl.x, startControl.y, endControl.x, endControl.y, curveEnd.x, curveEnd.y];\n            // Save the original point for fractional calculations\n            curveCmd.origPoint = curPoint;\n            resultCommands.push(curveCmd);\n          } else {\n            // Pass through commands that don't qualify\n            resultCommands.push(curCmd);\n          }\n        }\n\n        // Fix up the starting point and restore the close path if the path was orignally closed\n        if (virtualCloseLine) {\n          var newStartPoint = pointForCommand(resultCommands[resultCommands.length-1]);\n          resultCommands.push([\"Z\"]);\n          adjustCommand(resultCommands[0], newStartPoint);\n        }\n      } else {\n        resultCommands = commands;\n      }\n\n      return resultCommands.reduce(function(str, c){ return str + c.join(\" \") + \" \"; }, \"\");\n    }\n});\n","angular.module('bpmn').\ndirective('svgSymbols', function() {\n    return {\n        restrict: 'E',\n        scope: {\n        },\n        replace: true,\n        templateUrl: 'js/svg-symbols.directive.html',\n        templateNamespace: 'svg',\n        controllerAs: 'symbols',\n        bindToController: true,\n        controller: function() {\n        }\n    };\n});\n\n","angular.module('bpmn').\ndirective('scriptTask', function() {\n    return {\n        restrict: 'E',\n        scope: {\n            task: \"=\"\n        },\n        replace: true,\n        templateUrl: 'js/task.directive.html',\n        templateNamespace: 'svg',\n        controllerAs: 'task',\n        bindToController: true,\n        controller: function() {\n            this.bounds = this.task.di.Bounds[0].$;\n            this.type = 'script';\n            this.symbol = '#' + this.type + '-task';\n            if(this.task.di.BPMNLabel) {\n                this.label = this.task.di.BPMNLabel[0].Bounds[0].$;\n                this.label.x -= this.bounds.x;\n                this.label.y -= this.bounds.y;\n            } else {\n                // TODO: multiline labels (long texts: divide label)\n                var yLabel = this.bounds.height / 2;\n                this.label = { x: 10, y: yLabel, witdh: 80, height: 20 };\n            }\n        }\n    };\n});\n","angular.module('bpmn').\ndirective('task', function() {\n    return {\n        restrict: 'E',\n        scope: {\n            task: \"=\"\n        },\n        replace: true,\n        templateUrl: 'js/task.directive.html',\n        templateNamespace: 'svg',\n        controllerAs: 'task',\n        bindToController: true,\n        controller: function() {\n            this.prueba = 5;\n            this.bounds = this.task.di.Bounds[0].$;\n            this.type = '';\n            this.symbol = '';\n            if(this.task.di.BPMNLabel) {\n                this.label = this.task.di.BPMNLabel[0].Bounds[0].$;\n            } else {\n                // TODO: multiline labels (long texts: divide label)\n                var yLabel = this.bounds.height / 2;\n                this.label = { x: 10, y: yLabel, witdh: 80, height: 20 };\n            }\n        }\n    };\n});\n","angular.module('bpmn').\ndirective('sendTask', function() {\n    return {\n        restrict: 'E',\n        scope: {\n            task: \"=\"\n        },\n        replace: true,\n        templateUrl: 'js/task.directive.html',\n        templateNamespace: 'svg',\n        controllerAs: 'task',\n        bindToController: true,\n        controller: function() {\n            this.bounds = this.task.di.Bounds[0].$;\n            this.type = 'send';\n            this.symbol = '#' + this.type + '-task';\n            if(this.task.di.BPMNLabel) {\n                this.label = this.task.di.BPMNLabel[0].Bounds[0].$;\n                this.label.x -= this.bounds.x;\n                this.label.y -= this.bounds.y;\n            } else {\n                // TODO: multiline labels (long texts: divide label)\n                var yLabel = this.bounds.height / 2;\n                this.label = { x: 10, y: yLabel, witdh: 80, height: 20 };\n            }\n        }\n    };\n});\n","angular.module('bpmn').\ndirective('serviceTask', function() {\n    return {\n        restrict: 'E',\n        scope: {\n            task: \"=\"\n        },\n        replace: true,\n        templateUrl: 'js/task.directive.html',\n        templateNamespace: 'svg',\n        controllerAs: 'task',\n        bindToController: true,\n        controller: function() {\n            this.bounds = this.task.di.Bounds[0].$;\n            this.type = 'service';\n            this.symbol = '#' + this.type + '-task';\n            if(this.task.di.BPMNLabel) {\n                this.label = this.task.di.BPMNLabel[0].Bounds[0].$;\n                this.label.x -= this.bounds.x;\n                this.label.y -= this.bounds.y;\n            } else {\n                // TODO: multiline labels (long texts: divide label)\n                var yLabel = this.bounds.height / 2;\n                this.label = { x: 10, y: yLabel, witdh: 80, height: 20 };\n            }\n        }\n    };\n});\n","angular.module('bpmn').\ndirective('startEvent', function() {\n    return {\n        restrict: 'E',\n        scope: {\n            event: \"=\"\n        },\n        replace: true,\n        templateUrl: 'js/event.directive.html',\n        templateNamespace: 'svg',\n        controllerAs: 'event',\n        bindToController: true,\n        controller: function() {\n            this.bounds = this.event.di.Bounds[0].$;\n            this.type = 'start';\n            // Label\n            if(this.event.di.BPMNLabel) {\n                this.label = this.event.di.BPMNLabel[0].Bounds[0].$;\n                this.label.x -= this.bounds.x;\n                this.label.y -= this.bounds.y;\n            }\n        }\n    };\n});\n","angular.module('bpmn').\ndirective('userTask', function() {\n    return {\n        restrict: 'E',\n        scope: {\n            task: \"=\"\n        },\n        replace: true,\n        templateUrl: 'js/task.directive.html',\n        templateNamespace: 'svg',\n        controllerAs: 'task',\n        bindToController: true,\n        controller: function() {\n            this.bounds = this.task.di.Bounds[0].$;\n            this.type = 'user';\n            this.symbol = '#' + this.type + '-task';\n            if(this.task.di.BPMNLabel) {\n                this.label = this.task.di.BPMNLabel[0].Bounds[0].$;\n                this.label.x -= this.bounds.x;\n                this.label.y -= this.bounds.y;\n            } else {\n                // TODO: multiline labels (long texts: divide label)\n                var yLabel = this.bounds.height / 2;\n                this.label = { x: 10, y: yLabel, witdh: 80, height: 20 };\n            }\n        }\n    };\n});\n"],"sourceRoot":"/source/"}